{"version":3,"sources":["index.js"],"names":["ScrollReveal","reset","reveal","delay","modals","document","querySelectorAll","openModalBtns","closeBtns","modalCovers","closeModal","forEach","modal","classList","add","remove","window","onclick","e","modalCover","target","openModalBtn","addEventListener","clikedOpenBtn","getAttribute","modalDataNum","closeBtn","language","en","otsukare","otsukare_p","corona_h4","location","hash","textContent"],"mappings":"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","file":"tokyo_isakaya_website.e31bb0bc.js","sourceRoot":"..","sourcesContent":["// import Polyglot from 'node-polyglot';\n\n///////////////////  LP Animation  //////////////////\nScrollReveal({ reset: true }).reveal('.top-text',{delay: 200});\nScrollReveal({ reset: true }).reveal('.top-message-box',{delay: 200});\nScrollReveal({ reset: true }).reveal('.foodmenu-title', {delay: 200});\nScrollReveal({ reset: true }).reveal('.wrap', {delay: 200});\n\n\n///////////////////  Modal  //////////////////\n\n// Get the modal\nconst modals = document.querySelectorAll(\".modal\");\n// Get the button that opens the modal\nconst openModalBtns = document.querySelectorAll(\".modal-open\");\n// Get btn-close\nconst closeBtns = document.querySelectorAll(\".btn-close\");\n//Get modal cover\nconst modalCovers = document.querySelectorAll('.modal-cover')\n\n//モーダルを閉じる処理\nconst closeModal = () => {\n  modals.forEach((modal)=>{\n  modal.classList.add('is-close')\n  modal.classList.remove('is-open')\n  modal.classList.remove('is-close')\n  })\n};\n\n// 外の範囲クリックでmodalを閉じる\nwindow.onclick = (e) => {\n  modalCovers.forEach((modalCover) => {\n    if(e.target === modalCover){\n      closeModal();\n    }\n  });\n};\n\n// モーダル開くボタンクリックでmodalを開く\nopenModalBtns.forEach((openModalBtn) => {\n  openModalBtn.addEventListener('click', () => {\n    const clikedOpenBtn = openModalBtn.getAttribute('data-modal-open');\n    modals.forEach((modal) => { //もしも同じNumの場合\n      const modalDataNum = modal.getAttribute('data-modal');\n      if(modalDataNum === clikedOpenBtn){\n        modal.classList.add('is-open')\n      }\n    })\n  })\n});\n\n// グレーのcloseボタンクリックでmodalを閉じる\ncloseBtns.forEach((closeBtn) => {\n  closeBtn.addEventListener('click', () => {\n    closeModal();\n  });\n});\n\n/////////////  Multilingual  //////////\n\n// class TranslationApp {\n//   constructor() {\n//     this.polyglot = new Polyglot();\n//     this.currentLocale = localStorage.getItem(\"locale\" || \"ja\");\n//     this.updateLocale = this.updateLocale.bind(this);\n//   }\n\n//   setup() {\n\n//     if (this.currentLocale === \"ja\"){\n//       this.polyglot.extend({\n//         \"message\":\"こんにちは、世界\",\n//       });\n//     } else {\n//       this.polyglot.extend({\n//         \"message\":\"Hello, World\",\n//       });\n//     }\n//   }\n\n//   updateLocale(e) {\n//     //ボタンにセットされたdata-localeを元に現在のlocaleを変更します。\n//     const clickedlocale = e.target.dataset.locale;\n//     localStorage.setItem(\"locale\", clickedlocale);\n//     this.currentLocale = clickedlocale;\n//     console.log(this.currentLocale)\n//     this.showMessage();\n//   }\n\n//   showMessage() {\n//     this.setup()\n//     this.polyglot.t('message');\n//     // const mainEl = document.getElementById('main');\n//     // mainEl.innerHTML = `\n//     // <h1>\n//     //   ${this.polyglot.t('message')}\n//     // <h1>\n//     // `;\n//   }\n\n// };\n\n// {\n//   const app = new TranslationApp();\n//   // console.log(app)\n//   // app.setup();\n//   app.showMessage();\n//   const button1 = document.getElementById('button1');\n//   button1.addEventListener(\"click\", app.updateLocale);\n\n//   const button2 = document.getElementById('button2');\n//   button2.addEventListener(\"click\", app.updateLocale);\n// }\n\n\n//language translation\nconst language = {\n\n  en: {\n    otsukare: \"Hello, Welcome to Bikki.\",\n    otsukare_p: \"why don't we <br>drink together tonight?\",\n    corona_h4: \"Measurement against COVID-19\",\n  }\n};\n\n//define language via hash..\nif(window.location.hash){\n  if(window.location.hash === \"#en\"){\n    otsukare.textContent = language.en.otsukare;\n    otsukare_p.textContent = language.en.otsukare_p;\n    corona_h4.textContent = language.en.corona_h4;\n  }\n}\n\n"]}